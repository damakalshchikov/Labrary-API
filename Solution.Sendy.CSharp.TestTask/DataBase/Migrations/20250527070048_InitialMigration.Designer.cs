// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solution.Sendy.CSharp.TestTask.DataBase;

#nullable disable

namespace Solution.Sendy.CSharp.TestTask.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250527070048_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Solution.Sendy.CSharp.TestTask.DataBase.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Email = "pushkin_kolotushkin@alex.org",
                            FirstName = "Александр",
                            LastName = "Пушкин"
                        },
                        new
                        {
                            AuthorId = 2,
                            Email = "lionFat@mail.ru",
                            FirstName = "Лев",
                            LastName = "Толстой"
                        },
                        new
                        {
                            AuthorId = 3,
                            Email = "londonUK@gmail.com",
                            FirstName = "Джек",
                            LastName = "Лондон"
                        },
                        new
                        {
                            AuthorId = 4,
                            Email = "stoicism@yandex.ru",
                            FirstName = "Марк",
                            LastName = "Аврелий"
                        });
                });

            modelBuilder.Entity("Solution.Sendy.CSharp.TestTask.DataBase.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Title = "Сказка о царе Салтане"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Title = "Евгений Онегин"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            Title = "Война и мир"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 2,
                            Title = "Анна Каренина"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 3,
                            Title = "Белый Клык"
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 3,
                            Title = "Любовь к жизни"
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 4,
                            Title = "Наедине с собой"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
